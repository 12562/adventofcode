 cat $1 | awk '{total = NF-1; for (i=1;i<NF;i++) { diff = ($(i+1) - $i); /*printf("%d ", diff)*/; consistent[diff < 0]++; abs = sqrt(diff^2); if ( (abs <= 3) && (abs >= 1)  ) { withinlim++}} ; c=((consistent[0]==total) || (consistent[0]==0)); w = (withinlim==total); /*printf("=> Consistent:%d :: Withinlimit:%d ", c, w)*/; if ( c && w) {numsafe++;/*printf("=> Safe\n")*/} else {/*printf "=> Unsafe\n"*/}; /*printf("%d:%d:%d\n", withinlim, consistent[0], c&&w)*/;consistent[0]=0; consistent[1]=0; withinlim=0;} END {printf("Part 1 : %d\n", numsafe) }'

 cat $1 | awk '{  print $0; total = NF-1; for (i=1;i<NF;i++) { diff = ($(i+1) - $i); printf("%d ", diff); if (diff < 0) {consistent[-1]++} else if (diff == 0) {consistent[0]++} else {consistent[1]++}; abs = sqrt(diff^2); if ( ((abs > 3) && (abs < 1)) || ((consistent[-1] > 0) && (consistent[1] > 0)) || (consistent[0] > 0) ) { diff2 = ($(i+2) - $i); abs2 = sqrt(diff2^2); if ( ((abs2 <= 3) && (abs2 >= 1)) && (((consistent[1] == i) && (diff2 > 0))  || ((consistent[-1] == i) && (diff2 < 0))) && \!flag ) { total = total-1; printf("--<0: %d; >0: %d; check", consistent[-1], consistent[1]); flag=1 } }; if ( ((abs <= 3) && (abs >= 1))  ) { withinlim++ }; if ((i == NF-2) && \!flag) { total--; break;} }; c = ((consistent[1]==total) || (consistent[-1]==total)); w = (withinlim>=total); printf("=> Consistent:%d :: Withinlimit:%d ", c, w); if ( c && w) { numsafe++; printf("=> Safe\n") } else { printf "=> Unsafe\n" }; printf("withinlim-%d:consistent[1]-%d:consistent[-1]-%d:c&&w-%d:Total-%d\n", withinlim, consistent[1], consistent[-1], c&&w, total); consistent[1]=0; consistent[-1]=0; withinlim=0; flag=0; printf("\n")} END { printf("Part 2 : %d\n", numsafe) }'
